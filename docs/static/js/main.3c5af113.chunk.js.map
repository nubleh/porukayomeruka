{"version":3,"sources":["AppHelpers.tsx","TsukuruChart.tsx","AppStyledComponents.tsx","Chart.tsx","ChartCanvas.tsx","YomiChart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["parseYomiCSV","csv","rows","split","headers","data","forEach","row","cols","name","total","parseInt","item","url","img","points","x","length","header","val","push","parseTsukuruCSV","startHunter","durToSecs","startDog","startCat","end","dur","factors","nums","reverse","secs","imgPath","Offstream","styled","div","Container","Legend","List","ListItem","Icon","Bar","Bars","Chip","Eq","labelDur","H","Math","floor","M","S","TsukuruChart","useState","tsukuruItems","setTsukuruItems","useEffect","csvPath","Promise","resolve","fetch","then","resp","text","getTsukuruData","sortParam","setSortParam","sortedData","map","i","durHunter","durDog","durCat","sort","a","b","numberedData","filter","offstreamData","maxDur","colors","binCount","binSize","bins","d","binIndex","max","onClick","style","backgroundColor","width1","width2","width3","labels","backgroundImage","w","width","ChartContainer","Header","ItemList","ItemListHeader","barHeight","css","RowBar","RowIcon","RowScore","Row","RowContent","RowName","Footer","height","TextBoxDot","top","TextBox","getAbbrNames","Chart","props","maxPoint","optionalSort","setOptionalSort","animStep","useRef","animFrame","canvasRef","renderKey","join","dataWithColor","color","draw","isFinished","Object","keys","current","k","min","cv","axes","step","animFrameCount","ctx","getContext","radius","midX","midY","lineWidth","axPoints","_","index","angle","PI","axX","sin","axY","cos","bgRegion","Path2D","moveTo","coord","nextCoord","beginPath","lineTo","stroke","closePath","fillStyle","fill","dataIndex","dStep","segmentSize","ax","prevSegment","steppedRadius","valX","valY","region","drawCanvas","cancelAnimationFrame","requestAnimationFrame","currentKeys","dataKeys","key","indexOf","abbrNames","ref","col","array","transform","background","label","pointBreakdown","words","YomiChart","yomiItems","setYomiItems","hexItems","setHexItems","window","innerHeight","setBarHeight","innerWidth","hexHeight","setHexHeight","init","setInit","Date","now","chartRenderKey","setChartRenderKey","heightRef","sortCol","setSortCol","onResize","diff","abs","addEventListener","removeEventListener","getYomiData","setTimeout","order","y1","y2","y1Val","y2Val","extraSpace","src","alt","y","dataItem","find","yomiItem","transitionDelay","currentIndex","nextCol","yomi","isSelected","animOffset","prevHexItems","slice","href","target","rel","App","hash","location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5af113.chunk.js","sourcesContent":["import { Yomi } from \"./YomiChart\";\r\n\r\nexport const getYomiData = (csvPath: string) => {\r\n  return new Promise<Yomi[]>((resolve) => {\r\n    fetch(csvPath).then((resp) => resp.text()).then((csv) => {\r\n      resolve(parseYomiCSV(csv));\r\n    });\r\n  });\r\n};\r\n\r\nexport const parseYomiCSV = (csv: string) => {\r\n  const rows = csv.split(\"\\n\");\r\n  const headers = rows[1].split(',');\r\n  const data: Yomi[] = [];\r\n  rows.forEach((row) => {\r\n    const cols = row.split(',');\r\n    const name = cols[0];\r\n    const total = parseInt(cols[3], 10) || 0;\r\n    if (!name || !total) {\r\n      return;\r\n    }\r\n    const item: Yomi = {\r\n      name,\r\n      url: cols[1],\r\n      img: cols[2],\r\n      total,\r\n      points: {},\r\n    };\r\n    for (let x = 3; x < headers.length; x++) {\r\n      const header = headers[x];\r\n      const val = parseInt(cols[x] || '', 10);\r\n      if (header && header !== '0' && val) {\r\n        item.points[header] = val;\r\n      }\r\n    }\r\n    data.push(item);\r\n  });\r\n  return data;\r\n};\r\n\r\nexport interface Tsukuru {\r\n  name: string;\r\n  url: string;\r\n  img: string;\r\n  startHunter: number;\r\n  startDog: number;\r\n  startCat: number;\r\n  end: number;\r\n}\r\nexport const getTsukuruData = (csvPath: string) => {\r\n  return new Promise<Tsukuru[]>((resolve) => {\r\n    fetch(csvPath).then((resp) => resp.text()).then((csv) => {\r\n      resolve(parseTsukuruCSV(csv));\r\n    });\r\n  });\r\n};\r\n\r\nexport const parseTsukuruCSV = (csv: string) => {\r\n  const rows = csv.split(\"\\n\");\r\n  const headers = rows[1].split(',');\r\n  const data: Tsukuru[] = [];\r\n  rows.forEach((row) => {\r\n    const cols = row.split(',');\r\n    const name = cols[0];\r\n    if (!name || !cols[1]) {\r\n      return;\r\n    }\r\n    const startHunter = durToSecs(cols[3]);\r\n    const startDog = durToSecs(cols[4]);\r\n    const startCat = durToSecs(cols[6]);\r\n    const end = durToSecs(cols[8]);\r\n    const item: Tsukuru = {\r\n      name,\r\n      url: cols[1],\r\n      img: cols[2],\r\n      startHunter,\r\n      startDog,\r\n      startCat,\r\n      end,\r\n    };\r\n    data.push(item);\r\n  });\r\n  return data;\r\n};\r\n\r\nconst durToSecs = (dur: string) => {\r\n  if (!dur) {\r\n    return 0;\r\n  }\r\n  const factors = [1, 60, 60 * 60];\r\n  const nums = dur.split(':').reverse();\r\n  let secs = 0;\r\n  for (let x = 0; x < nums.length; x++) {\r\n    secs += (parseInt(nums[x], 10) || 0) * factors[x];\r\n  }\r\n  return secs;\r\n};\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { getTsukuruData, Tsukuru } from './AppHelpers';\r\n\r\ntype SortParam = 'dur' | 'durHunter' | 'durDog' | 'durCat';\r\nconst imgPath = 'img/';\r\nconst csvPath = 'tsukureruka.csv';\r\n\r\nconst TsukuruChart = () => {\r\n  const [tsukuruItems, setTsukuruItems] = useState([] as Tsukuru[]);\r\n  useEffect(() => {\r\n    getTsukuruData(csvPath).then((data) => {\r\n      setTsukuruItems(data);\r\n    });\r\n  }, []);\r\n\r\n  const [sortParam, setSortParam] = useState('dur' as SortParam);\r\n  const sortedData = tsukuruItems.map(i => {\r\n    const durHunter = i.startDog - i.startHunter;\r\n    const durDog = i.startCat - i.startDog;\r\n    const durCat = i.end - i.startCat;\r\n    const dur = i.end - i.startHunter;\r\n    return {\r\n      ...i,\r\n      durHunter,\r\n      durDog,\r\n      durCat,\r\n      dur,\r\n    };\r\n  }).sort((a, b) => {\r\n    if (a.url === b.url) {\r\n      return 0;\r\n    }\r\n    if (a.url === 'offstream') {\r\n      return 1;\r\n    }\r\n    if (b.url === 'offstream') {\r\n      return -1;\r\n    }\r\n    return a[sortParam] === b[sortParam] ? 0 : a[sortParam] < b[sortParam] ? 1 : -1;\r\n  });\r\n  const numberedData = sortedData.filter(i => i.url !== 'offstream');\r\n  const offstreamData = sortedData.filter(i => i.url === 'offstream');\r\n\r\n  const maxDur = sortedData[0]?.dur | 1;\r\n  const colors = [\r\n    '#340042',\r\n    '#1f8179',\r\n    '#fce51e',\r\n  ];\r\n  const params = ['dur', 'durHunter', 'durDog', 'durCat'] as SortParam[];\r\n\r\n  const [binCount, setBinCount] = useState(5);\r\n  const binSize = maxDur / binCount;\r\n  const bins = [] as Tsukuru[][];\r\n  for (let x = 0; x < binCount; x++) {\r\n    bins.push([]);\r\n  }\r\n  numberedData.forEach(d => {\r\n    const binIndex = Math.floor(d.dur / binSize);\r\n    if (!bins[binIndex]) {\r\n      bins[binIndex] = [];\r\n    }\r\n    bins[binIndex].push(d);\r\n  });\r\n  const highestBin = Math.max(...bins.map(b => b.length));\r\n  const binHeight = 400 / highestBin;\r\n\r\n  return <Container>\r\n    {/*\r\n      <div>\r\n        <div onClick={() => {\r\n          setBinCount(binCount + 1);\r\n        }}>more</div>\r\n        <div onClick={() => {\r\n          setBinCount(Math.max(1, binCount - 1));\r\n        }}>less</div>\r\n        <div style={{marginTop: 50}}>{binCount} {binCount < 2 ? 'bin' : 'bins'}</div>\r\n        <Histogram style={{\r\n          width: '400px',\r\n        }}>\r\n          {bins.map((b, i) => {\r\n            const from = Math.round(i * binSize);\r\n            const fromLabel = labelDur(from);\r\n            const to = Math.round((i + 1) * binSize);\r\n            const toLabel = labelDur(to);\r\n            const label = `${from}~${to}`;\r\n            return <div\r\n              style={{\r\n                height: `${b.length * binHeight}px`,\r\n                width: `${100 / binCount}%`,\r\n              }}\r\n            >\r\n              {b.length}\r\n            </div>;\r\n          })}\r\n        </Histogram>\r\n      </div>\r\n    */}\r\n    <div>\r\n      {params.map((d) => {\r\n        return <div\r\n          onClick={() => {\r\n            setSortParam(d);\r\n          }}\r\n        >{d}</div>;\r\n      })}\r\n    </div>\r\n    <h1>\r\n      How long do the HoloHunters take to create their characters?\r\n    </h1>\r\n    <Legend>\r\n      <div>\r\n        <div style={{ backgroundColor: colors[0] }}/>\r\n        <span>\r\n          Hunter\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div style={{ backgroundColor: colors[1] }}/>\r\n        <span>\r\n          Palamute\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div style={{ backgroundColor: colors[2] }}/>\r\n        <span>\r\n          Palico\r\n        </span>\r\n      </div>\r\n    </Legend>\r\n    <List>\r\n      {numberedData.map(i => {\r\n        const width1 = `${(i.durHunter / maxDur) * 100}%`;\r\n        const width2 = `${(i.durDog / maxDur) * 100}%`;\r\n        const width3 = `${(i.durCat / maxDur) * 100}%`;\r\n        const labels = [i.durHunter, i.durDog, i.durCat, i.dur].map(secs => labelDur(secs));\r\n        return <ListItem>\r\n          <Icon style={{\r\n            backgroundImage: `url(${imgPath}${i.img})`,\r\n          }}/>\r\n          <Bars>\r\n            <div>\r\n              {[width1, width2, width3].map((w, i) => {\r\n                return <Bar\r\n                  style={{\r\n                    backgroundColor: colors[i],\r\n                    width: w,\r\n                  }}\r\n                />;\r\n              })}\r\n            </div>\r\n            <div>\r\n              <Chip>{labels[0]}</Chip>\r\n              <Eq>+</Eq>\r\n              <Chip>{labels[1]}</Chip>\r\n              <Eq>+</Eq>\r\n              <Chip>{labels[2]}</Chip>\r\n              <Eq>=</Eq>\r\n              <Chip>{labels[3]}</Chip>\r\n            </div>\r\n          </Bars>\r\n        </ListItem>;\r\n      })}\r\n    </List>\r\n    <Offstream>\r\n      <div>\r\n        These hunters created their characters off-stream\r\n      </div>\r\n      {offstreamData.map(i => {\r\n        return <Icon style={{\r\n          backgroundImage: `url(${imgPath}${i.img})`,\r\n        }}/>;\r\n      })}\r\n    </Offstream>\r\n  </Container>;\r\n};\r\nconst Offstream = styled.div`\r\n  margin: 20px;\r\n\r\n  > div {\r\n    margin: 4px;\r\n  }\r\n`;\r\nconst Histogram = styled.div`\r\n  width: 100%;\r\n  font-size: 0.8em;\r\n  text-align: center;\r\n  margin-bottom: 50px;\r\n\r\n  > div {\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background: #000;\r\n    color: #fff;\r\n    vertical-align: bottom;\r\n    display: inline-block;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n`;\r\nconst Legend = styled.div`\r\n  text-align: center;\r\n  > div {\r\n    margin: 0 8px;\r\n  }\r\n  > div > div {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin: 0 4px;\r\n    border-radius: 4px;\r\n  }\r\n  div, span {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n  }\r\n`;\r\nconst List = styled.div`\r\n`;\r\nconst ListItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 14px 0;\r\n`;\r\nconst Icon = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  background-position: top center;\r\n  background-size: 150% auto;\r\n  display: inline-block;\r\n  flex: none;\r\n  border-radius: 50px;\r\n  box-sizing: border-box;\r\n  box-shadow: 0 3px 12px rgba(0, 0, 0, 0.3);\r\n`;\r\nconst Bar = styled.div`\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  height: 20px;\r\n`;\r\nconst Bars = styled.div`\r\n  flex: 1 1 auto;\r\n  box-sizing: border-box;\r\n  border: solid 10px transparent;\r\n  border-width: 0 10px;\r\n\r\n  ${Bar}:first-child {\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n  ${Bar}:last-child {\r\n    border-radius: 0 4px 4px 0;\r\n  }\r\n`;\r\nconst Chip = styled.div`\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  padding: 2px 4px;\r\n  background: silver;\r\n  border-radius: 4px;\r\n  margin: 2px 4px;\r\n  font-size: 0.8em;\r\n`;\r\nconst Eq = styled.div`\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n`;\r\n\r\nconst labelDur = (secs: number) => {\r\n  const H = Math.floor(secs / 3600);\r\n  const M = Math.floor((secs % 3600) / 60);\r\n  const S = Math.floor(secs % 60);\r\n  return !M ? `${S}s` : !H ? `${M}m ${S}s` : `${H}h ${M}m ${S}s`;\r\n}\r\n\r\nexport default TsukuruChart;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  font-family: sans-serif;\r\n  background: #fff;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ChartContainer = styled.div`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  text-align: center;\r\n  padding: 16px;\r\n  img {\r\n    border-radius: 16px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n    max-height: 25vw;\r\n  }\r\n`;\r\n\r\nexport const ItemList = styled.div`\r\n  margin: 8px 0;\r\n  position: relative;\r\n`;\r\n\r\ninterface RowProps {\r\n  barHeight: number;\r\n}\r\n\r\nexport const ItemListHeader = styled.div<RowProps>`\r\n  text-align: right;\r\n  transition: transform 0.5s;\r\n  padding: 0 8px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n  ${({ barHeight }) => css`\r\n    height: ${barHeight}px;\r\n    line-height: ${barHeight}px;\r\n  `}\r\n`;\r\n\r\nexport const RowBar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  background: #ddd;\r\n  width: 100%;\r\n  transition: transform 1s;\r\n  transform-origin: top left;\r\n`;\r\nexport const RowIcon = styled.div`\r\n  background-size: 150% auto;\r\n  background-position: center top;\r\n  background-color: #fff;\r\n`;\r\nexport const RowScore = styled.div`\r\n  flex: none;\r\n  padding: 0 8px;\r\n`;\r\nexport const Row = styled.div<RowProps>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  transition: transform 0.5s;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n  ${({ barHeight }) => css`\r\n    height: ${barHeight}px;\r\n    line-height: ${barHeight}px;\r\n    &:hover {\r\n      background-image: linear-gradient(\r\n        to bottom,\r\n        silver 0,\r\n        silver 1px,\r\n        transparent 1px,\r\n        transparent ${barHeight - 1}px,\r\n        silver ${barHeight - 1}px\r\n      );\r\n    }\r\n\r\n    ${RowBar} {\r\n      left: ${barHeight}px;\r\n      height: ${barHeight}px;\r\n    }\r\n\r\n    ${RowIcon} {\r\n      width: ${barHeight}px;\r\n      height: ${barHeight}px;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const RowContent = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  z-index: 5;\r\n`;\r\nexport const RowName = styled.div`\r\n  flex: 1 1 auto;\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    height: 50vw;\r\n`;\r\n","import * as React from 'react';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { drawCanvas } from './ChartCanvas';\r\n\r\nexport interface DataPoint {\r\n  name: string;\r\n  data: {\r\n    [key: string]: number;\r\n  };\r\n  img: string;\r\n}\r\nexport interface DataPointWithColor extends DataPoint {\r\n  color: string;\r\n}\r\ninterface ChartProps {\r\n  height: number;\r\n  data?: DataPoint[];\r\n  cols?: string[];\r\n  maxPoint: number;\r\n  optionalSort?: string;\r\n  setOptionalSort?: (newSort: string) => void;\r\n}\r\nexport interface AnimStep {\r\n  [key: string]: number;\r\n}\r\nconst colors = [\r\n  'rgba(255, 0, 0, 0.5)',\r\n  'rgba(0, 0, 255, 0.5)',\r\n  'rgba(0, 255, 0, 0.5)',\r\n];\r\n\r\nconst animFrameCount = 100;\r\n\r\nconst Chart = (props: ChartProps) => {\r\n  const {\r\n    height,\r\n    data,\r\n    cols,\r\n    maxPoint,\r\n    optionalSort,\r\n    setOptionalSort,\r\n  } = props;\r\n  const animStep = useRef({} as AnimStep);\r\n  const animFrame = useRef(0);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const renderKey = (data || []).map((i) => i.name).sort().join(',');\r\n\r\n  const dataWithColor: DataPointWithColor[] = (data || []).map((d, i) => {\r\n    return {\r\n      ...d,\r\n      color: colors[i % colors.length],\r\n    };\r\n  });\r\n\r\n  const draw = () => {\r\n    let isFinished = true;\r\n    Object.keys(animStep.current).forEach((k) => {\r\n      animStep.current[k] = Math.min(animStep.current[k] + 1, animFrameCount);\r\n      if (animStep.current[k] < animFrameCount) {\r\n        isFinished = false;\r\n      }\r\n    });\r\n    drawCanvas({\r\n      cv: canvasRef.current,\r\n      axes: cols || [],\r\n      data: dataWithColor,\r\n      step: animStep.current,\r\n      animFrameCount,\r\n      maxPoint,\r\n    });\r\n    if (!isFinished) {\r\n      cancelAnimationFrame(animFrame.current);\r\n      animFrame.current = requestAnimationFrame(draw);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentKeys = Object.keys(animStep.current);\r\n    const dataKeys = (data || []).map((d) => d.name);\r\n    currentKeys.forEach((key) => {\r\n      if (dataKeys.indexOf(key) === -1) {\r\n        delete animStep.current[key];\r\n      }\r\n    });\r\n    dataKeys.forEach((k) => {\r\n      if (typeof animStep.current[k] === 'undefined') {\r\n        animStep.current[k] = 0;\r\n      }\r\n    });\r\n\r\n    cancelAnimationFrame(animFrame.current);\r\n    animFrame.current = requestAnimationFrame(draw);\r\n  }, [renderKey, data]);\r\n\r\n  const radius = height / 2.5;\r\n  const abbrNames = getAbbrNames(dataWithColor);\r\n\r\n  return <Container\r\n    height={height}\r\n  >\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={height * 2}\r\n      height={height * 2}\r\n    ></canvas>\r\n    {(cols || []).map((col, index, array) => {\r\n      const angle = (index / array.length) * (Math.PI * 2);\r\n      const axX = Math.sin(angle) * radius;\r\n      const axY = - Math.cos(angle) * radius;\r\n      return <TextBoxDot\r\n        key={col}\r\n        top={height / 2}\r\n        style={{\r\n          transform: `translateX(${axX}px) translateY(${axY}px)`,\r\n        }}\r\n        onClick={() => {\r\n          if (setOptionalSort) {\r\n            setOptionalSort(col);\r\n          }\r\n        }}\r\n      ><TextBox style={{\r\n        background: col === optionalSort ? 'rgba(0, 0, 0, 0.7)' : '',\r\n        color: col === optionalSort ? '#fff' : '',\r\n      }}>\r\n        <div>\r\n          {col}\r\n        </div>\r\n        <div>\r\n          {dataWithColor.map((d, i) => {\r\n            const label = abbrNames[i];\r\n            return <div key={d.name}>\r\n              <span>\r\n                {label} ({d.data[col]})\r\n              </span>\r\n              <Chip\r\n                style={{\r\n                  background: d.color,\r\n                }}\r\n              />\r\n            </div>;\r\n          })}\r\n        </div>\r\n      </TextBox></TextBoxDot>;\r\n    })}\r\n  </Container>;\r\n};\r\n\r\ninterface ContainerProps {\r\n  height: number;\r\n}\r\nconst Container = styled.div<ContainerProps>`\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 0;\r\n\r\n  canvas {\r\n    pointer-events: none;\r\n    position: relative;\r\n  }\r\n  ${({ height }) => css`\r\n    canvas {\r\n      width: ${height}px;\r\n      height: ${height}px;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst CompareImg = styled.img`\r\n  position: absolute;\r\n  max-width: 50vw;\r\n  max-height: 25vh;\r\n  top: 0;\r\n  background: #fff;\r\n  opacity: 0.5;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst Chip = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 12px;\r\n  height: 12px;\r\n  margin: 0 4px;\r\n  border: solid 1px #fff;\r\n`;\r\n\r\ninterface TextBoxDotProps {\r\n  top: number;\r\n}\r\nconst TextBoxDot = styled.div<TextBoxDotProps>`\r\n  width: 1px;\r\n  height: 1px;\r\n  position: absolute;\r\n  left: 50%;\r\n  ${({ top }) => css`\r\n    top: ${top}px;\r\n  `}\r\n`;\r\nconst TextBox = styled.div`\r\n  position: absolute;\r\n  padding: 4px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 4px;\r\n  white-space: nowrap;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 0.8em;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  span {\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nconst getAbbrNames = (data: DataPointWithColor[]) => {\r\n  let length = 1;\r\n  const labels = data.map((d) => {\r\n    return d.name.split(/\\s+/).reverse()[0];\r\n  });\r\n  return labels;\r\n  let abbrs = labels.map((w) => w.substr(0, length));\r\n  while (abbrs.length !== (new Set(abbrs)).size) {\r\n    length += 1;\r\n    abbrs = labels.map((w) => w.substr(0, length));\r\n  }\r\n  return abbrs;\r\n};\r\n\r\nexport default Chart;","import { AnimStep, DataPointWithColor } from \"./Chart\";\r\n\r\ninterface DrawCanvasProps {\r\n  cv: HTMLCanvasElement | null;\r\n  axes: string[];\r\n  data: DataPointWithColor[];\r\n  step: AnimStep;\r\n  animFrameCount: number;\r\n  maxPoint: number;\r\n}\r\n\r\nexport const drawCanvas = (props: DrawCanvasProps) => {\r\n  const {\r\n    cv,\r\n    axes,\r\n    data,\r\n    step,\r\n    animFrameCount,\r\n    maxPoint,\r\n  } = props;\r\n  const ctx = cv?.getContext('2d');\r\n  if (!cv || !ctx) {\r\n    return;\r\n  }\r\n  cv.width = cv.width + 0;\r\n  const radius = cv.width * 0.3;\r\n  const midX = cv.width / 2;\r\n  const midY = cv.height / 2;\r\n  ctx.lineWidth = 4;\r\n\r\n  const axPoints = [] as Array<[number, number]>;\r\n  // calculate edge points\r\n  axes.forEach((_, index) => {\r\n    const angle = (index / axes.length) * (Math.PI * 2);\r\n    const axX = midX + Math.sin(angle) * radius;\r\n    const axY = midY - Math.cos(angle) * radius;\r\n    axPoints.push([axX, axY]);\r\n  });\r\n  const bgRegion = new Path2D();\r\n  bgRegion.moveTo(axPoints[0][0], axPoints[0][1]);\r\n  // draw the polygon\r\n  axPoints.forEach((coord, i) => {\r\n    const nextCoord = axPoints[i + 1] || axPoints[0];\r\n    ctx.beginPath();\r\n    ctx.moveTo(coord[0], coord[1]);\r\n    ctx.lineTo(nextCoord[0], nextCoord[1]);\r\n    ctx.stroke();\r\n    bgRegion.lineTo(nextCoord[0], nextCoord[1]);\r\n  });\r\n  bgRegion.closePath();\r\n  ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\r\n  ctx.fill(bgRegion, 'evenodd');\r\n\r\n  // draw the lines from center to edges of polygon\r\n  axPoints.forEach(([axX, axY]) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(midX, midY);\r\n    ctx.lineTo(axX, axY);\r\n    ctx.stroke();\r\n  });\r\n\r\n  // draw text\r\n  // const fontSize = radius / 8;\r\n  // axes.forEach((label, index) => {\r\n  //   const angle = (index / axes.length) * (Math.PI * 2);\r\n  //   const axX = midX + Math.sin(angle) * radius * 1.05;\r\n  //   const axY = midY - Math.cos(angle) * radius * 1.05;\r\n  //   const biasX = axX - midX;\r\n  //   const biasY = axY - midY > 0 ? fontSize : -fontSize;\r\n  //   ctx.font = `${fontSize}px sans-serif`;\r\n  //   ctx.textAlign = biasX < 0 ? 'end' : biasX > 0 ? 'start' : 'center';\r\n  //   ctx.fillStyle = '#000';\r\n  //   ctx.fillText(` ${label} `, axX, axY + biasY);\r\n  // });\r\n\r\n  data.forEach((d, dataIndex) => {\r\n    const {\r\n      name,\r\n      color,\r\n    } = d;\r\n    const dStep = step[name];\r\n    const segmentSize = animFrameCount / axes.length;\r\n    const points = [] as Array<[number, number]>;\r\n    axes.forEach((ax, index) => {\r\n      const val = d.data[ax];\r\n      if (val) {\r\n        const rate = val / maxPoint;\r\n        const ratedRadius = rate * radius;\r\n\r\n        const prevSegment = segmentSize * index;\r\n        const segmentStep = Math.min(segmentSize, Math.max(0, dStep - prevSegment));\r\n        const steppedRadius = ratedRadius * (segmentStep / segmentSize);\r\n        const angle = (index / axes.length) * (Math.PI * 2);\r\n        const valX = midX + Math.sin(angle) * steppedRadius;\r\n        const valY = midY - Math.cos(angle) * steppedRadius;\r\n        points.push([valX, valY]);\r\n      } else {\r\n        points.push([midX, midY]);\r\n      }\r\n    });\r\n\r\n    const region = new Path2D();\r\n    region.moveTo(points[0][0], points[0][1]);\r\n    points.forEach((coord, i) => {\r\n      const nextCoord = points[i + 1] || points[0];\r\n      region.lineTo(nextCoord[0], nextCoord[1]);\r\n    });\r\n    region.closePath();\r\n    ctx.fillStyle = color;\r\n    ctx.fill(region, 'evenodd');\r\n  });\r\n};\r\n","import * as React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { getYomiData } from './AppHelpers';\r\n\r\nimport {\r\n  ChartContainer,\r\n  Container,\r\n  Footer,\r\n  Header,\r\n  ItemList,\r\n  ItemListHeader,\r\n  Row,\r\n  RowBar,\r\n  RowContent,\r\n  RowIcon,\r\n  RowName,\r\n  RowScore,\r\n} from './AppStyledComponents';\r\nimport Chart from './Chart';\r\n\r\nexport interface Yomi {\r\n  name: string;\r\n  url: string;\r\n  total: number;\r\n  points: { [key: string]: number };\r\n  img: string;\r\n};\r\n\r\nconst pointBreakdown = {\r\n  '知識': ['常識力', '専門知識'],\r\n  '役割理解': ['空間認識', '集団力'],\r\n  '共感': ['人情力', '大人力'],\r\n  '洞察': ['情報統合力', '瞬発力'],\r\n  'タイミング': ['リズム感', '間合い'],\r\n};\r\nconst words: { [key: string]: string } = {\r\n  '知識': 'Know-how',\r\n  '役割理解': 'Role comprehension',\r\n  '共感': 'Empathy',\r\n  '洞察': 'Insight',\r\n  'タイミング': 'Timing',\r\n};\r\n\r\nconst imgPath = 'img/';\r\nconst csvPath = 'yomeruka.csv';\r\nconst maxCompare = 2;\r\n\r\nconst YomiChart = () => {\r\n  const [yomiItems, setYomiItems] = useState([] as Yomi[]);\r\n  const [hexItems, setHexItems] = useState([] as string[]);\r\n  const [barHeight, setBarHeight] = useState(window.innerHeight / 20);\r\n  const [hexHeight, setHexHeight] = useState(Math.min(\r\n    window.innerHeight / 2,\r\n    window.innerWidth,\r\n  ));\r\n  const [init, setInit] = useState(false);\r\n  const [chartRenderKey, setChartRenderKey] = useState(Date.now());\r\n  const heightRef = useRef(window.innerHeight);\r\n  const [sortCol, setSortCol] = useState('');\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const diff = Math.abs(heightRef.current - window.innerHeight);\r\n      heightRef.current = window.innerHeight;\r\n      if (diff < 100) {\r\n        return;\r\n      }\r\n      setBarHeight(window.innerHeight / 20);\r\n      setHexHeight(Math.min(\r\n        window.innerHeight / 2,\r\n        window.innerWidth,\r\n      ));\r\n      setChartRenderKey(Date.now());\r\n    };\r\n    window.addEventListener('resize', onResize);\r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    getYomiData(csvPath).then((data) => {\r\n      setYomiItems(data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setInit(true);\r\n    }, 500);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (hexItems.length === 0) {\r\n      setSortCol('');\r\n    }\r\n  }, [hexItems]);\r\n  const toggleHex = (name: string) => {\r\n    setHexItems((prevHexItems) => {\r\n      return [\r\n        ...prevHexItems.filter((item) => item !== name),\r\n        ...(prevHexItems.indexOf(name) === -1 ? [name] : []),\r\n      ].slice(0, maxCompare);\r\n    });\r\n  };\r\n\r\n  const order = [...yomiItems].sort((y1, y2) => {\r\n    // const y1Selected = hexItems.indexOf(y1.name) !== -1;\r\n    // const y2Selected = hexItems.indexOf(y2.name) !== -1;\r\n    // if (y1Selected && !y2Selected) {\r\n    //   return -1;\r\n    // }\r\n    // if (!y1Selected && y2Selected) {\r\n    //   return 1;\r\n    // }\r\n    const y1Val = sortCol ? y1.points[sortCol] : y1.total;\r\n    const y2Val = sortCol ? y2.points[sortCol] : y2.total;\r\n    return y1Val > y2Val ? -1 : y1Val < y2Val ? 1 : 0;\r\n  }).map((item) => item.name);\r\n\r\n  const extraSpace = hexItems.length > 0 ? hexHeight : 0;\r\n\r\n  return <Container>\r\n    <Header>\r\n      <img src={'game.png'} alt={'Kuuki Yomi 3'}/>\r\n    </Header>\r\n    {hexItems.length > 0 && <ChartContainer><Chart\r\n      key={chartRenderKey}\r\n      height={hexHeight}\r\n      cols={Object.keys(pointBreakdown)}\r\n      optionalSort={sortCol}\r\n      setOptionalSort={(col) => {\r\n        if (col === sortCol) {\r\n          setSortCol('');\r\n        } else {\r\n          setSortCol(col);\r\n        }\r\n      }}\r\n      maxPoint={Math.max(...yomiItems.map((y) => {\r\n        return Math.max(...Object.keys(pointBreakdown).map((k) => {\r\n          return y.points[k];\r\n        }));\r\n      }))}\r\n      data={hexItems.map((name) => {\r\n        const dataItem = yomiItems.find((yomiItem) => yomiItem.name === name);\r\n        if (!dataItem) {\r\n          return {\r\n            name: '',\r\n            data: {},\r\n            img: '',\r\n          };\r\n        }\r\n        return {\r\n          name,\r\n          data: {\r\n            ...dataItem.points,\r\n          },\r\n          img: `${imgPath}${dataItem.img}`,\r\n        };\r\n      }).filter((item) => !!item)}\r\n    /></ChartContainer>}\r\n    <ItemList\r\n      style={{\r\n        height: `${extraSpace + (barHeight * (yomiItems.length + 1))}px`,\r\n      }}\r\n    >\r\n      <ItemListHeader\r\n        barHeight={barHeight}\r\n        style={{\r\n          transform: `translateY(${extraSpace}px)`,\r\n          transitionDelay: `${hexItems.length > 0\r\n            ? yomiItems.length * 0.01\r\n            : 0\r\n          }s`,\r\n        }}\r\n        onClick={() => {\r\n          const cols = Object.keys(pointBreakdown);\r\n          const currentIndex = cols.indexOf(sortCol);\r\n          const nextCol = cols[currentIndex + 1];\r\n          setSortCol(nextCol || '');\r\n        }}\r\n      >\r\n        {sortCol ? `${sortCol} (${words[sortCol]})` : 'Total'}\r\n      </ItemListHeader>\r\n      {yomiItems.map((yomi) => {\r\n        const val = sortCol ? yomi.points[sortCol] : yomi.total;\r\n        const width = sortCol ? val / 200 : yomi.total / 1000;\r\n        const index = order.indexOf(yomi.name);\r\n        const isSelected = hexItems.indexOf(yomi.name) !== -1;\r\n        const animOffset = (false && isSelected)\r\n          ? hexItems.indexOf(yomi.name) * 0.01\r\n          : hexItems.length > 0\r\n            ? (yomiItems.length - index) * 0.01\r\n            :  index * 0.01;\r\n        return <Row\r\n          barHeight={barHeight}\r\n          key={yomi.name}\r\n          style={{\r\n            transform: `translateY(${extraSpace + (index + 1) * barHeight}px)`,\r\n            transitionDelay: `${animOffset}s`,\r\n          }}\r\n          onClick={() => {\r\n            toggleHex(yomi.name);\r\n          }}\r\n        >\r\n          <RowBar\r\n            style={{\r\n              transform: `scaleX(${init ? width : 0})`,\r\n              background: isSelected ? '#bbb' : '',\r\n            }}\r\n          />\r\n          <RowContent>\r\n            <RowIcon\r\n              style={yomi.img ? {\r\n                backgroundImage: `url(${imgPath}${yomi.img})`,\r\n              } : {}}\r\n            />\r\n            <RowName>\r\n              {index + 1}. {yomi.name} (<a\r\n                href={yomi.url}\r\n                target={'_blank'}\r\n                rel={'noopener noreferrer'}\r\n              >stream</a>)\r\n            </RowName>\r\n            <RowScore>\r\n              {val}\r\n            </RowScore>\r\n          </RowContent>\r\n        </Row>;\r\n      })}\r\n    </ItemList>\r\n    <Footer></Footer>\r\n  </Container>;\r\n};\r\n\r\nexport default YomiChart;\r\n","import * as React from 'react';\n\nimport TsukuruChart from './TsukuruChart';\nimport YomiChart from './YomiChart';\n\nconst App = () => {\n  const hash = window.location.hash;\n  return <div>\n    {hash === '' && <YomiChart/>}\n    {hash === '#tsukureruka' && <TsukuruChart/>}\n  </div>;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}