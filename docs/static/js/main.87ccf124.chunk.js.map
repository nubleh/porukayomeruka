{"version":3,"sources":["AppHelpers.tsx","AppStyledComponents.tsx","Chart.tsx","ChartCanvas.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["parseYomiCSV","csv","rows","split","headers","data","forEach","row","cols","name","total","parseInt","item","url","img","points","x","length","header","val","push","Container","styled","div","ChartContainer","Header","ItemList","ItemListHeader","barHeight","css","RowBar","RowIcon","Row","RowContent","RowName","RowScore","Footer","colors","height","Chip","TextBoxDot","top","TextBox","getAbbrNames","labels","map","d","reverse","Chart","props","maxPoint","optionalSort","setOptionalSort","animStep","useRef","animFrame","canvasRef","renderKey","i","sort","join","dataWithColor","color","draw","isFinished","Object","keys","current","k","Math","min","cv","axes","step","animFrameCount","ctx","getContext","width","radius","midX","midY","lineWidth","axPoints","_","index","angle","PI","axX","sin","axY","cos","bgRegion","Path2D","moveTo","coord","nextCoord","beginPath","lineTo","stroke","closePath","fillStyle","fill","dataIndex","dStep","segmentSize","ax","prevSegment","steppedRadius","max","valX","valY","region","drawCanvas","cancelAnimationFrame","requestAnimationFrame","useEffect","currentKeys","dataKeys","key","indexOf","abbrNames","ref","col","array","style","transform","onClick","background","label","pointBreakdown","words","imgPath","App","useState","yomiItems","setYomiItems","hexItems","setHexItems","window","innerHeight","setBarHeight","innerWidth","hexHeight","setHexHeight","init","setInit","Date","now","chartRenderKey","setChartRenderKey","heightRef","sortCol","setSortCol","onResize","diff","abs","addEventListener","removeEventListener","csvPath","Promise","resolve","fetch","then","resp","text","getYomiData","setTimeout","order","y1","y2","y1Val","y2Val","extraSpace","src","alt","y","dataItem","find","yomiItem","filter","transitionDelay","yomi","isSelected","animOffset","prevHexItems","slice","backgroundImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAUaA,EAAe,SAACC,GAC3B,IAAMC,EAAOD,EAAIE,MAAM,MACjBC,EAAUF,EAAK,GAAGC,MAAM,KACxBE,EAAe,GAwBrB,OAvBAH,EAAKI,SAAQ,SAACC,GACZ,IAAMC,EAAOD,EAAIJ,MAAM,KACjBM,EAAOD,EAAK,GACZE,EAAQC,SAASH,EAAK,GAAI,KAAO,EACvC,GAAKC,GAASC,EAAd,CAUA,IAPA,IAAME,EAAa,CACjBH,OACAI,IAAKL,EAAK,GACVM,IAAKN,EAAK,GACVE,QACAK,OAAQ,IAEDC,EAAI,EAAGA,EAAIZ,EAAQa,OAAQD,IAAK,CACvC,IAAME,EAASd,EAAQY,GACjBG,EAAMR,SAASH,EAAKQ,IAAM,GAAI,IAChCE,GAAqB,MAAXA,GAAkBC,IAC9BP,EAAKG,OAAOG,GAAUC,GAG1Bd,EAAKe,KAAKR,OAELP,G,cCnCIgB,EAAYC,IAAOC,IAAV,6EAKTC,EAAiBF,IAAOC,IAAV,4EAMdE,EAASH,IAAOC,IAAV,oLAUNG,EAAWJ,IAAOC,IAAV,qEASRI,EAAiBL,IAAOC,IAAV,iIAKvB,gBAAGK,EAAH,EAAGA,UAAH,OAAmBC,YAAlB,IAAD,sEACUD,EACKA,MAINE,EAASR,IAAOC,IAAV,+JAQNQ,EAAUT,IAAOC,IAAV,+FAIPS,EAAMV,IAAOC,IAAV,yLAUZ,gBAAGK,EAAH,EAAGA,UAAH,OAAmBC,YAAlB,IAAD,mMACUD,EACKA,EAEbE,EACQF,EACEA,EAGVG,EACSH,EACCA,MAKHK,EAAaX,IAAOC,IAAV,oFAKVW,EAAUZ,IAAOC,IAAV,kEAIPY,EAAWb,IAAOC,IAAV,8DAKRa,EAASd,IAAOC,IAAV,+C,OCpEbc,EAAS,CACb,uBACA,uBACA,wBA0HIhB,EAAYC,IAAOC,IAAV,sLAUX,gBAAGe,EAAH,EAAGA,OAAH,OAAgBT,YAAf,MAAD,uFAEWS,EACCA,MAeVC,GAVajB,IAAOR,IAAV,sKAUHQ,IAAOC,IAAV,gKAYJiB,EAAalB,IAAOC,IAAV,uGAKZ,gBAAGkB,EAAH,EAAGA,IAAH,OAAaZ,YAAZ,MAAD,wCACOY,MAGLC,EAAUpB,IAAOC,IAAV,2UAmBPoB,EAAe,SAACtC,GACpB,IACMuC,EAASvC,EAAKwC,KAAI,SAACC,GACvB,OAAOA,EAAErC,KAAKN,MAAM,OAAO4C,UAAU,MAEvC,OAAOH,GASMI,EAvMD,SAACC,GAAuB,IAElCX,EAMEW,EANFX,OACAjC,EAKE4C,EALF5C,KACAG,EAIEyC,EAJFzC,KACA0C,EAGED,EAHFC,SACAC,EAEEF,EAFFE,aACAC,EACEH,EADFG,gBAEIC,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,GACnBE,EAAYF,iBAA0B,MACtCG,GAAapD,GAAQ,IAAIwC,KAAI,SAACa,GAAD,OAAOA,EAAEjD,QAAMkD,OAAOC,KAAK,KAExDC,GAAuCxD,GAAQ,IAAIwC,KAAI,SAACC,EAAGY,GAC/D,OAAO,2BACFZ,GADL,IAEEgB,MAAOzB,EAAOqB,EAAIrB,EAAOpB,aAIvB8C,EAAO,SAAPA,IACJ,IAAIC,GAAa,EACjBC,OAAOC,KAAKb,EAASc,SAAS7D,SAAQ,SAAC8D,GACrCf,EAASc,QAAQC,GAAKC,KAAKC,IAAIjB,EAASc,QAAQC,GAAK,EA1BpC,KA2Bbf,EAASc,QAAQC,GA3BJ,MA4BfJ,GAAa,MClDK,SAACf,GAA4B,IAEnDsB,EAMEtB,EANFsB,GACAC,EAKEvB,EALFuB,KACAnE,EAIE4C,EAJF5C,KACAoE,EAGExB,EAHFwB,KACAC,EAEEzB,EAFFyB,eACAxB,EACED,EADFC,SAEIyB,EAAG,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAIK,WAAW,MAC3B,GAAKL,GAAOI,EAAZ,CAGAJ,EAAGM,MAAQN,EAAGM,MAAQ,EACtB,IAAMC,EAAoB,GAAXP,EAAGM,MACZE,EAAOR,EAAGM,MAAQ,EAClBG,EAAOT,EAAGjC,OAAS,EACzBqC,EAAIM,UAAY,EAEhB,IAAMC,EAAW,GAEjBV,EAAKlE,SAAQ,SAAC6E,EAAGC,GACf,IAAMC,EAASD,EAAQZ,EAAKvD,QAAqB,EAAVoD,KAAKiB,IACtCC,EAAMR,EAAOV,KAAKmB,IAAIH,GAASP,EAC/BW,EAAMT,EAAOX,KAAKqB,IAAIL,GAASP,EACrCI,EAAS9D,KAAK,CAACmE,EAAKE,OAEtB,IAAME,EAAW,IAAIC,OACrBD,EAASE,OAAOX,EAAS,GAAG,GAAIA,EAAS,GAAG,IAE5CA,EAAS5E,SAAQ,SAACwF,EAAOpC,GACvB,IAAMqC,EAAYb,EAASxB,EAAI,IAAMwB,EAAS,GAC9CP,EAAIqB,YACJrB,EAAIkB,OAAOC,EAAM,GAAIA,EAAM,IAC3BnB,EAAIsB,OAAOF,EAAU,GAAIA,EAAU,IACnCpB,EAAIuB,SACJP,EAASM,OAAOF,EAAU,GAAIA,EAAU,OAE1CJ,EAASQ,YACTxB,EAAIyB,UAAY,2BAChBzB,EAAI0B,KAAKV,EAAU,WAGnBT,EAAS5E,SAAQ,YAAiB,IAAD,mBAAdiF,EAAc,KAATE,EAAS,KAC/Bd,EAAIqB,YACJrB,EAAIkB,OAAOd,EAAMC,GACjBL,EAAIsB,OAAOV,EAAKE,GAChBd,EAAIuB,YAiBN7F,EAAKC,SAAQ,SAACwC,EAAGwD,GAAe,IAE5B7F,EAEEqC,EAFFrC,KACAqD,EACEhB,EADFgB,MAEIyC,EAAQ9B,EAAKhE,GACb+F,EAAc9B,EAAiBF,EAAKvD,OACpCF,EAAS,GACfyD,EAAKlE,SAAQ,SAACmG,EAAIrB,GAChB,IAAMjE,EAAM2B,EAAEzC,KAAKoG,GACnB,GAAItF,EAAK,CACP,IAGMuF,EAAcF,EAAcpB,EAE5BuB,EALOxF,EAAM+B,EACQ4B,GAGPT,KAAKC,IAAIkC,EAAanC,KAAKuC,IAAI,EAAGL,EAAQG,IACXF,GAC7CnB,EAASD,EAAQZ,EAAKvD,QAAqB,EAAVoD,KAAKiB,IACtCuB,EAAO9B,EAAOV,KAAKmB,IAAIH,GAASsB,EAChCG,EAAO9B,EAAOX,KAAKqB,IAAIL,GAASsB,EACtC5F,EAAOK,KAAK,CAACyF,EAAMC,SAEnB/F,EAAOK,KAAK,CAAC2D,EAAMC,OAIvB,IAAM+B,EAAS,IAAInB,OACnBmB,EAAOlB,OAAO9E,EAAO,GAAG,GAAIA,EAAO,GAAG,IACtCA,EAAOT,SAAQ,SAACwF,EAAOpC,GACrB,IAAMqC,EAAYhF,EAAO2C,EAAI,IAAM3C,EAAO,GAC1CgG,EAAOd,OAAOF,EAAU,GAAIA,EAAU,OAExCgB,EAAOZ,YACPxB,EAAIyB,UAAYtC,EAChBa,EAAI0B,KAAKU,EAAQ,eD7CjBC,CAAW,CACTzC,GAAIf,EAAUW,QACdK,KAAMhE,GAAQ,GACdH,KAAMwD,EACNY,KAAMpB,EAASc,QACfO,eApCiB,IAqCjBxB,aAEGc,IACHiD,qBAAqB1D,EAAUY,SAC/BZ,EAAUY,QAAU+C,sBAAsBnD,KAI9CoD,qBAAU,WACR,IAAMC,EAAcnD,OAAOC,KAAKb,EAASc,SACnCkD,GAAYhH,GAAQ,IAAIwC,KAAI,SAACC,GAAD,OAAOA,EAAErC,QAC3C2G,EAAY9G,SAAQ,SAACgH,IACY,IAA3BD,EAASE,QAAQD,WACZjE,EAASc,QAAQmD,MAG5BD,EAAS/G,SAAQ,SAAC8D,GACmB,qBAAxBf,EAASc,QAAQC,KAC1Bf,EAASc,QAAQC,GAAK,MAI1B6C,qBAAqB1D,EAAUY,SAC/BZ,EAAUY,QAAU+C,sBAAsBnD,KACzC,CAACN,EAAWpD,IAEf,IAAMyE,EAASxC,EAAS,IAClBkF,EAAY7E,EAAakB,GAE/B,OAAO,eAAC,EAAD,CACLvB,OAAQA,EADH,UAGL,wBACEmF,IAAKjE,EACLqB,MAAgB,EAATvC,EACPA,OAAiB,EAATA,KAER9B,GAAQ,IAAIqC,KAAI,SAAC6E,EAAKtC,EAAOuC,GAC7B,IAAMtC,EAASD,EAAQuC,EAAM1G,QAAqB,EAAVoD,KAAKiB,IACvCC,EAAMlB,KAAKmB,IAAIH,GAASP,EACxBW,GAAQpB,KAAKqB,IAAIL,GAASP,EAChC,OAAO,cAACtC,EAAD,CAELC,IAAKH,EAAS,EACdsF,MAAO,CACLC,UAAU,cAAD,OAAgBtC,EAAhB,0BAAqCE,EAArC,QAEXqC,QAAS,WACH1E,GACFA,EAAgBsE,IARf,SAWN,eAAChF,EAAD,CAASkF,MAAO,CACfG,WAAYL,IAAQvE,EAAe,qBAAuB,GAC1DW,MAAO4D,IAAQvE,EAAe,OAAS,IAFxC,UAIC,8BACGuE,IAEH,8BACG7D,EAAchB,KAAI,SAACC,EAAGY,GACrB,IAAMsE,EAAQR,EAAU9D,GACxB,OAAO,gCACL,iCACGsE,EADH,KACYlF,EAAEzC,KAAKqH,GADnB,OAGA,cAACnF,EAAD,CACEqF,MAAO,CACLG,WAAYjF,EAAEgB,WANHhB,EAAErC,eApBlBiH,UEpFPO,GAAiB,CACrB,eAAM,CAAC,qBAAO,4BACd,2BAAQ,CAAC,2BAAQ,sBACjB,eAAM,CAAC,qBAAO,sBACd,eAAM,CAAC,iCAAS,sBAChB,iCAAS,CAAC,2BAAQ,uBAEdC,GAAmC,CACvC,eAAM,YACN,2BAAQ,2BACR,eAAM,UACN,eAAM,UACN,iCAAS,UAGLC,GAAU,OAkLDC,GA9KH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGkBJ,mBAASK,OAAOC,YAAc,IAHhD,mBAGT/G,EAHS,KAGEgH,EAHF,OAIkBP,mBAAShE,KAAKC,IAC9CoE,OAAOC,YAAc,EACrBD,OAAOG,aANO,mBAITC,EAJS,KAIEC,EAJF,OAQQV,oBAAS,GARjB,mBAQTW,EARS,KAQHC,EARG,OAS4BZ,mBAASa,KAAKC,OAT1C,mBASTC,EATS,KASOC,EATP,KAUVC,EAAYhG,iBAAOoF,OAAOC,aAVhB,EAWcN,mBAAS,IAXvB,mBAWTkB,EAXS,KAWAC,EAXA,KAYhBrC,qBAAU,WACR,IAAMsC,EAAW,WACfb,EAAaF,OAAOC,YAAc,IAClCI,EAAa1E,KAAKC,IAChBoE,OAAOC,YAAc,EACrBD,OAAOG,aAET,IAAMa,EAAOrF,KAAKsF,IAAIL,EAAUnF,QAAUuE,OAAOC,aACjDW,EAAUnF,QAAUuE,OAAOC,YACvBe,EAAO,KAGXL,EAAkBH,KAAKC,QAGzB,OADAT,OAAOkB,iBAAiB,SAAUH,GAC3B,WACLf,OAAOmB,oBAAoB,SAAUJ,MAEtC,IACHtC,qBAAU,YJ5Ee,SAAC2C,GAC1B,OAAO,IAAIC,SAAgB,SAACC,GAC1BC,MAAMH,GAASI,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAAQF,MAAK,SAACjK,GAC/C+J,EAAQhK,EAAaC,WI0EvBoK,CAnCY,gBAmCSH,MAAK,SAAC7J,GACzBkI,EAAalI,QAEd,IACH8G,qBAAU,WACRmD,YAAW,WACTrB,GAAQ,KACP,OACF,IACH9B,qBAAU,WACgB,IAApBqB,EAASvH,QACXuI,EAAW,MAEZ,CAAChB,IACJ,IASM+B,EAAQ,YAAIjC,GAAW3E,MAAK,SAAC6G,EAAIC,GASrC,IAAMC,EAAQnB,EAAUiB,EAAGzJ,OAAOwI,GAAWiB,EAAG9J,MAC1CiK,EAAQpB,EAAUkB,EAAG1J,OAAOwI,GAAWkB,EAAG/J,MAChD,OAAOgK,EAAQC,GAAS,EAAID,EAAQC,EAAQ,EAAI,KAC/C9H,KAAI,SAACjC,GAAD,OAAUA,EAAKH,QAEhBmK,EAAapC,EAASvH,OAAS,EAAI6H,EAAY,EAErD,OAAO,eAACzH,EAAD,WACL,cAACI,EAAD,UACE,qBAAKoJ,IAAK,WAAYC,IAAK,mBAE5BtC,EAASvH,OAAS,GAAK,cAACO,EAAD,UAAgB,cAAC,EAAD,CAEtCc,OAAQwG,EACRtI,KAAMyD,OAAOC,KAAK+D,IAClB9E,aAAcoG,EACdnG,gBAAiB,SAACsE,GAEd8B,EADE9B,IAAQ6B,EACC,GAEA7B,IAGfxE,SAAUmB,KAAKuC,IAAL,MAAAvC,KAAI,YAAQiE,EAAUzF,KAAI,SAACkI,GACnC,OAAO1G,KAAKuC,IAAL,MAAAvC,KAAI,YAAQJ,OAAOC,KAAK+D,IAAgBpF,KAAI,SAACuB,GAClD,OAAO2G,EAAEhK,OAAOqD,aAGpB/D,KAAMmI,EAAS3F,KAAI,SAACpC,GAClB,IAAMuK,EAAW1C,EAAU2C,MAAK,SAACC,GAAD,OAAcA,EAASzK,OAASA,KAChE,OAAKuK,EAOE,CACLvK,OACAJ,KAAK,eACA2K,EAASjK,QAEdD,IAAI,GAAD,OAAKqH,IAAL,OAAe6C,EAASlK,MAXpB,CACLL,KAAM,GACNJ,KAAM,GACNS,IAAK,OAURqK,QAAO,SAACvK,GAAD,QAAYA,MAhCjBwI,KAkCP,eAAC1H,EAAD,CACEkG,MAAO,CACLtF,OAAO,GAAD,OAAKsI,EAAchJ,GAAa0G,EAAUrH,OAAS,GAAnD,OAFV,UAKE,cAACU,EAAD,CACEC,UAAWA,EACXgG,MAAO,CACLC,UAAU,cAAD,OAAgB+C,EAAhB,OACTQ,gBAAgB,GAAD,OAAK5C,EAASvH,OAAS,EACf,IAAnBqH,EAAUrH,OACV,EAFW,MAJnB,SAUGsI,EAAO,UAAMA,EAAN,aAAkBrB,GAAMqB,GAAxB,KAAsC,UAE/CjB,EAAUzF,KAAI,SAACwI,GACd,IAAMlK,EAAMoI,EAAU8B,EAAKtK,OAAOwI,GAAW8B,EAAK3K,MAC5CmE,EAAQ0E,EAAUpI,EAAM,IAAMkK,EAAK3K,MAAQ,IAC3C0E,EAAQmF,EAAMhD,QAAQ8D,EAAK5K,MAC3B6K,GAA8C,IAAjC9C,EAASjB,QAAQ8D,EAAK5K,MACnC8K,EAEF/C,EAASvH,OAAS,EACa,KAA5BqH,EAAUrH,OAASmE,GACX,IAARA,EACP,OAAO,eAACpD,EAAD,CACLJ,UAAWA,EAEXgG,MAAO,CACLC,UAAU,cAAD,OAAgB+C,GAAcxF,EAAQ,GAAKxD,EAA3C,OACTwJ,gBAAgB,GAAD,OAAKG,EAAL,MAEjBzD,QAAS,WAlGC,IAACrH,IAmGC4K,EAAK5K,KAlGvBgI,GAAY,SAAC+C,GACX,MAAO,sBACFA,EAAaL,QAAO,SAACvK,GAAD,OAAUA,IAASH,MADrC,aAE+B,IAAhC+K,EAAajE,QAAQ9G,GAAe,CAACA,GAAQ,KACjDgL,MAAM,EArDK,OA2IJ,UAWL,cAAC3J,EAAD,CACE8F,MAAO,CACLC,UAAU,UAAD,OAAYmB,EAAOnE,EAAQ,EAA3B,KACTkD,WAAYuD,EAAa,OAAS,MAGtC,eAACrJ,EAAD,WACE,cAACF,EAAD,CACE6F,MAAOyD,EAAKvK,IAAM,CAChB4K,gBAAgB,OAAD,OAASvD,IAAT,OAAmBkD,EAAKvK,IAAxB,MACb,KAEN,eAACoB,EAAD,WACGkD,EAAQ,EADX,KACgBiG,EAAK5K,QAErB,cAAC0B,EAAD,UACGhB,SAzBAkK,EAAK5K,YA+BhB,cAAC2B,EAAD,QC3MWuJ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.87ccf124.chunk.js","sourcesContent":["import { Yomi } from \"./App\";\r\n\r\nexport const getYomiData = (csvPath: string) => {\r\n  return new Promise<Yomi[]>((resolve) => {\r\n    fetch(csvPath).then((resp) => resp.text()).then((csv) => {\r\n      resolve(parseYomiCSV(csv));\r\n    });\r\n  });\r\n};\r\n\r\nexport const parseYomiCSV = (csv: string) => {\r\n  const rows = csv.split(\"\\n\");\r\n  const headers = rows[1].split(',');\r\n  const data: Yomi[] = [];\r\n  rows.forEach((row) => {\r\n    const cols = row.split(',');\r\n    const name = cols[0];\r\n    const total = parseInt(cols[3], 10) || 0;\r\n    if (!name || !total) {\r\n      return;\r\n    }\r\n    const item: Yomi = {\r\n      name,\r\n      url: cols[1],\r\n      img: cols[2],\r\n      total,\r\n      points: {},\r\n    };\r\n    for (let x = 3; x < headers.length; x++) {\r\n      const header = headers[x];\r\n      const val = parseInt(cols[x] || '', 10);\r\n      if (header && header !== '0' && val) {\r\n        item.points[header] = val;\r\n      }\r\n    }\r\n    data.push(item);\r\n  });\r\n  return data;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  font-family: sans-serif;\r\n  background: #fff;\r\n`;\r\n\r\nexport const ChartContainer = styled.div`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  text-align: center;\r\n  padding: 16px;\r\n  img {\r\n    border-radius: 16px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n    max-height: 25vw;\r\n  }\r\n`;\r\n\r\nexport const ItemList = styled.div`\r\n  margin: 8px 0;\r\n  position: relative;\r\n`;\r\n\r\ninterface RowProps {\r\n  barHeight: number;\r\n}\r\n\r\nexport const ItemListHeader = styled.div<RowProps>`\r\n  text-align: right;\r\n  transition: transform 0.5s;\r\n  padding: 0 8px;\r\n  font-weight: bold;\r\n  ${({ barHeight }) => css`\r\n    height: ${barHeight}px;\r\n    line-height: ${barHeight}px;\r\n  `}\r\n`;\r\n\r\nexport const RowBar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  background: #ddd;\r\n  width: 100%;\r\n  transition: transform 1s;\r\n  transform-origin: top left;\r\n`;\r\nexport const RowIcon = styled.div`\r\n  background-size: 150% auto;\r\n  background-position: center top;\r\n`;\r\nexport const Row = styled.div<RowProps>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  transition: transform 0.5s;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n  ${({ barHeight }) => css`\r\n    height: ${barHeight}px;\r\n    line-height: ${barHeight}px;\r\n\r\n    ${RowBar} {\r\n      left: ${barHeight}px;\r\n      height: ${barHeight}px;\r\n    }\r\n\r\n    ${RowIcon} {\r\n      width: ${barHeight}px;\r\n      height: ${barHeight}px;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const RowContent = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  z-index: 5;\r\n`;\r\nexport const RowName = styled.div`\r\n  flex: 1 1 auto;\r\n  padding: 0 8px;\r\n`;\r\nexport const RowScore = styled.div`\r\n  flex: none;\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    height: 50vw;\r\n`;\r\n","import * as React from 'react';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { drawCanvas } from './ChartCanvas';\r\n\r\nexport interface DataPoint {\r\n  name: string;\r\n  data: {\r\n    [key: string]: number;\r\n  };\r\n  img: string;\r\n}\r\nexport interface DataPointWithColor extends DataPoint {\r\n  color: string;\r\n}\r\ninterface ChartProps {\r\n  height: number;\r\n  data?: DataPoint[];\r\n  cols?: string[];\r\n  maxPoint: number;\r\n  optionalSort?: string;\r\n  setOptionalSort?: (newSort: string) => void;\r\n}\r\nexport interface AnimStep {\r\n  [key: string]: number;\r\n}\r\nconst colors = [\r\n  'rgba(255, 0, 0, 0.5)',\r\n  'rgba(0, 0, 255, 0.5)',\r\n  'rgba(0, 255, 0, 0.5)',\r\n];\r\n\r\nconst animFrameCount = 100;\r\n\r\nconst Chart = (props: ChartProps) => {\r\n  const {\r\n    height,\r\n    data,\r\n    cols,\r\n    maxPoint,\r\n    optionalSort,\r\n    setOptionalSort,\r\n  } = props;\r\n  const animStep = useRef({} as AnimStep);\r\n  const animFrame = useRef(0);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const renderKey = (data || []).map((i) => i.name).sort().join(',');\r\n\r\n  const dataWithColor: DataPointWithColor[] = (data || []).map((d, i) => {\r\n    return {\r\n      ...d,\r\n      color: colors[i % colors.length],\r\n    };\r\n  });\r\n\r\n  const draw = () => {\r\n    let isFinished = true;\r\n    Object.keys(animStep.current).forEach((k) => {\r\n      animStep.current[k] = Math.min(animStep.current[k] + 1, animFrameCount);\r\n      if (animStep.current[k] < animFrameCount) {\r\n        isFinished = false;\r\n      }\r\n    });\r\n    drawCanvas({\r\n      cv: canvasRef.current,\r\n      axes: cols || [],\r\n      data: dataWithColor,\r\n      step: animStep.current,\r\n      animFrameCount,\r\n      maxPoint,\r\n    });\r\n    if (!isFinished) {\r\n      cancelAnimationFrame(animFrame.current);\r\n      animFrame.current = requestAnimationFrame(draw);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentKeys = Object.keys(animStep.current);\r\n    const dataKeys = (data || []).map((d) => d.name);\r\n    currentKeys.forEach((key) => {\r\n      if (dataKeys.indexOf(key) === -1) {\r\n        delete animStep.current[key];\r\n      }\r\n    });\r\n    dataKeys.forEach((k) => {\r\n      if (typeof animStep.current[k] === 'undefined') {\r\n        animStep.current[k] = 0;\r\n      }\r\n    });\r\n\r\n    cancelAnimationFrame(animFrame.current);\r\n    animFrame.current = requestAnimationFrame(draw);\r\n  }, [renderKey, data]);\r\n\r\n  const radius = height / 2.5;\r\n  const abbrNames = getAbbrNames(dataWithColor);\r\n\r\n  return <Container\r\n    height={height}\r\n  >\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={height * 2}\r\n      height={height * 2}\r\n    ></canvas>\r\n    {(cols || []).map((col, index, array) => {\r\n      const angle = (index / array.length) * (Math.PI * 2);\r\n      const axX = Math.sin(angle) * radius;\r\n      const axY = - Math.cos(angle) * radius;\r\n      return <TextBoxDot\r\n        key={col}\r\n        top={height / 2}\r\n        style={{\r\n          transform: `translateX(${axX}px) translateY(${axY}px)`,\r\n        }}\r\n        onClick={() => {\r\n          if (setOptionalSort) {\r\n            setOptionalSort(col);\r\n          }\r\n        }}\r\n      ><TextBox style={{\r\n        background: col === optionalSort ? 'rgba(0, 0, 0, 0.7)' : '',\r\n        color: col === optionalSort ? '#fff' : '',\r\n      }}>\r\n        <div>\r\n          {col}\r\n        </div>\r\n        <div>\r\n          {dataWithColor.map((d, i) => {\r\n            const label = abbrNames[i];\r\n            return <div key={d.name}>\r\n              <span>\r\n                {label} ({d.data[col]})\r\n              </span>\r\n              <Chip\r\n                style={{\r\n                  background: d.color,\r\n                }}\r\n              />\r\n            </div>;\r\n          })}\r\n        </div>\r\n      </TextBox></TextBoxDot>;\r\n    })}\r\n  </Container>;\r\n};\r\n\r\ninterface ContainerProps {\r\n  height: number;\r\n}\r\nconst Container = styled.div<ContainerProps>`\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 0;\r\n\r\n  canvas {\r\n    pointer-events: none;\r\n    position: relative;\r\n  }\r\n  ${({ height }) => css`\r\n    canvas {\r\n      width: ${height}px;\r\n      height: ${height}px;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst CompareImg = styled.img`\r\n  position: absolute;\r\n  max-width: 50vw;\r\n  max-height: 25vh;\r\n  top: 0;\r\n  background: #fff;\r\n  opacity: 0.5;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst Chip = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 12px;\r\n  height: 12px;\r\n  margin: 0 4px;\r\n  border: solid 1px #fff;\r\n`;\r\n\r\ninterface TextBoxDotProps {\r\n  top: number;\r\n}\r\nconst TextBoxDot = styled.div<TextBoxDotProps>`\r\n  width: 1px;\r\n  height: 1px;\r\n  position: absolute;\r\n  left: 50%;\r\n  ${({ top }) => css`\r\n    top: ${top}px;\r\n  `}\r\n`;\r\nconst TextBox = styled.div`\r\n  position: absolute;\r\n  padding: 4px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 4px;\r\n  white-space: nowrap;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 0.8em;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  span {\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nconst getAbbrNames = (data: DataPointWithColor[]) => {\r\n  let length = 1;\r\n  const labels = data.map((d) => {\r\n    return d.name.split(/\\s+/).reverse()[0];\r\n  });\r\n  return labels;\r\n  let abbrs = labels.map((w) => w.substr(0, length));\r\n  while (abbrs.length !== (new Set(abbrs)).size) {\r\n    length += 1;\r\n    abbrs = labels.map((w) => w.substr(0, length));\r\n  }\r\n  return abbrs;\r\n};\r\n\r\nexport default Chart;","import { AnimStep, DataPointWithColor } from \"./Chart\";\r\n\r\ninterface DrawCanvasProps {\r\n  cv: HTMLCanvasElement | null;\r\n  axes: string[];\r\n  data: DataPointWithColor[];\r\n  step: AnimStep;\r\n  animFrameCount: number;\r\n  maxPoint: number;\r\n}\r\n\r\nexport const drawCanvas = (props: DrawCanvasProps) => {\r\n  const {\r\n    cv,\r\n    axes,\r\n    data,\r\n    step,\r\n    animFrameCount,\r\n    maxPoint,\r\n  } = props;\r\n  const ctx = cv?.getContext('2d');\r\n  if (!cv || !ctx) {\r\n    return;\r\n  }\r\n  cv.width = cv.width + 0;\r\n  const radius = cv.width * 0.3;\r\n  const midX = cv.width / 2;\r\n  const midY = cv.height / 2;\r\n  ctx.lineWidth = 4;\r\n\r\n  const axPoints = [] as Array<[number, number]>;\r\n  // calculate edge points\r\n  axes.forEach((_, index) => {\r\n    const angle = (index / axes.length) * (Math.PI * 2);\r\n    const axX = midX + Math.sin(angle) * radius;\r\n    const axY = midY - Math.cos(angle) * radius;\r\n    axPoints.push([axX, axY]);\r\n  });\r\n  const bgRegion = new Path2D();\r\n  bgRegion.moveTo(axPoints[0][0], axPoints[0][1]);\r\n  // draw the polygon\r\n  axPoints.forEach((coord, i) => {\r\n    const nextCoord = axPoints[i + 1] || axPoints[0];\r\n    ctx.beginPath();\r\n    ctx.moveTo(coord[0], coord[1]);\r\n    ctx.lineTo(nextCoord[0], nextCoord[1]);\r\n    ctx.stroke();\r\n    bgRegion.lineTo(nextCoord[0], nextCoord[1]);\r\n  });\r\n  bgRegion.closePath();\r\n  ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\r\n  ctx.fill(bgRegion, 'evenodd');\r\n\r\n  // draw the lines from center to edges of polygon\r\n  axPoints.forEach(([axX, axY]) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(midX, midY);\r\n    ctx.lineTo(axX, axY);\r\n    ctx.stroke();\r\n  });\r\n\r\n  // draw text\r\n  // const fontSize = radius / 8;\r\n  // axes.forEach((label, index) => {\r\n  //   const angle = (index / axes.length) * (Math.PI * 2);\r\n  //   const axX = midX + Math.sin(angle) * radius * 1.05;\r\n  //   const axY = midY - Math.cos(angle) * radius * 1.05;\r\n  //   const biasX = axX - midX;\r\n  //   const biasY = axY - midY > 0 ? fontSize : -fontSize;\r\n  //   ctx.font = `${fontSize}px sans-serif`;\r\n  //   ctx.textAlign = biasX < 0 ? 'end' : biasX > 0 ? 'start' : 'center';\r\n  //   ctx.fillStyle = '#000';\r\n  //   ctx.fillText(` ${label} `, axX, axY + biasY);\r\n  // });\r\n\r\n  data.forEach((d, dataIndex) => {\r\n    const {\r\n      name,\r\n      color,\r\n    } = d;\r\n    const dStep = step[name];\r\n    const segmentSize = animFrameCount / axes.length;\r\n    const points = [] as Array<[number, number]>;\r\n    axes.forEach((ax, index) => {\r\n      const val = d.data[ax];\r\n      if (val) {\r\n        const rate = val / maxPoint;\r\n        const ratedRadius = rate * radius;\r\n\r\n        const prevSegment = segmentSize * index;\r\n        const segmentStep = Math.min(segmentSize, Math.max(0, dStep - prevSegment));\r\n        const steppedRadius = ratedRadius * (segmentStep / segmentSize);\r\n        const angle = (index / axes.length) * (Math.PI * 2);\r\n        const valX = midX + Math.sin(angle) * steppedRadius;\r\n        const valY = midY - Math.cos(angle) * steppedRadius;\r\n        points.push([valX, valY]);\r\n      } else {\r\n        points.push([midX, midY]);\r\n      }\r\n    });\r\n\r\n    const region = new Path2D();\r\n    region.moveTo(points[0][0], points[0][1]);\r\n    points.forEach((coord, i) => {\r\n      const nextCoord = points[i + 1] || points[0];\r\n      region.lineTo(nextCoord[0], nextCoord[1]);\r\n    });\r\n    region.closePath();\r\n    ctx.fillStyle = color;\r\n    ctx.fill(region, 'evenodd');\r\n  });\r\n};\r\n","import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { getYomiData } from './AppHelpers';\n\nimport {\n  ChartContainer,\n  Container,\n  Footer,\n  Header,\n  ItemList,\n  ItemListHeader,\n  Row,\n  RowBar,\n  RowContent,\n  RowIcon,\n  RowName,\n  RowScore,\n} from './AppStyledComponents';\nimport Chart from './Chart';\n\nexport interface Yomi {\n  name: string;\n  url: string;\n  total: number;\n  points: { [key: string]: number };\n  img: string;\n};\n\nconst pointBreakdown = {\n  '知識': ['常識力', '専門知識'],\n  '役割理解': ['空間認識', '集団力'],\n  '共感': ['人情力', '大人力'],\n  '洞察': ['情報統合力', '瞬発力'],\n  'タイミング': ['リズム感', '間合い'],\n};\nconst words: { [key: string]: string } = {\n  '知識': 'Knowledge',\n  '役割理解': 'Understanding one\\'s role',\n  '共感': 'Empathy',\n  '洞察': 'Insight',\n  'タイミング': 'Timing',\n};\n\nconst imgPath = 'img/';\nconst csvPath = 'yomeruka.csv';\nconst maxCompare = 2;\n\nconst App = () => {\n  const [yomiItems, setYomiItems] = useState([] as Yomi[]);\n  const [hexItems, setHexItems] = useState([] as string[]);\n  const [barHeight, setBarHeight] = useState(window.innerHeight / 20);\n  const [hexHeight, setHexHeight] = useState(Math.min(\n    window.innerHeight / 2,\n    window.innerWidth,\n  ));\n  const [init, setInit] = useState(false);\n  const [chartRenderKey, setChartRenderKey] = useState(Date.now());\n  const heightRef = useRef(window.innerHeight);\n  const [sortCol, setSortCol] = useState('');\n  useEffect(() => {\n    const onResize = () => {\n      setBarHeight(window.innerHeight / 20);\n      setHexHeight(Math.min(\n        window.innerHeight / 2,\n        window.innerWidth,\n      ));\n      const diff = Math.abs(heightRef.current - window.innerHeight);\n      heightRef.current = window.innerHeight;\n      if (diff < 100) {\n        return;\n      }\n      setChartRenderKey(Date.now());\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n  useEffect(() => {\n    getYomiData(csvPath).then((data) => {\n      setYomiItems(data);\n    });\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      setInit(true);\n    }, 500);\n  }, []);\n  useEffect(() => {\n    if (hexItems.length === 0) {\n      setSortCol('');\n    }\n  }, [hexItems]);\n  const toggleHex = (name: string) => {\n    setHexItems((prevHexItems) => {\n      return [\n        ...prevHexItems.filter((item) => item !== name),\n        ...(prevHexItems.indexOf(name) === -1 ? [name] : []),\n      ].slice(0, maxCompare);\n    });\n  };\n\n  const order = [...yomiItems].sort((y1, y2) => {\n    // const y1Selected = hexItems.indexOf(y1.name) !== -1;\n    // const y2Selected = hexItems.indexOf(y2.name) !== -1;\n    // if (y1Selected && !y2Selected) {\n    //   return -1;\n    // }\n    // if (!y1Selected && y2Selected) {\n    //   return 1;\n    // }\n    const y1Val = sortCol ? y1.points[sortCol] : y1.total;\n    const y2Val = sortCol ? y2.points[sortCol] : y2.total;\n    return y1Val > y2Val ? -1 : y1Val < y2Val ? 1 : 0;\n  }).map((item) => item.name);\n\n  const extraSpace = hexItems.length > 0 ? hexHeight : 0;\n\n  return <Container>\n    <Header>\n      <img src={'game.png'} alt={'Kuuki Yomi 3'}/>\n    </Header>\n    {hexItems.length > 0 && <ChartContainer><Chart\n      key={chartRenderKey}\n      height={hexHeight}\n      cols={Object.keys(pointBreakdown)}\n      optionalSort={sortCol}\n      setOptionalSort={(col) => {\n        if (col === sortCol) {\n          setSortCol('');\n        } else {\n          setSortCol(col);\n        }\n      }}\n      maxPoint={Math.max(...yomiItems.map((y) => {\n        return Math.max(...Object.keys(pointBreakdown).map((k) => {\n          return y.points[k];\n        }));\n      }))}\n      data={hexItems.map((name) => {\n        const dataItem = yomiItems.find((yomiItem) => yomiItem.name === name);\n        if (!dataItem) {\n          return {\n            name: '',\n            data: {},\n            img: '',\n          };\n        }\n        return {\n          name,\n          data: {\n            ...dataItem.points,\n          },\n          img: `${imgPath}${dataItem.img}`,\n        };\n      }).filter((item) => !!item)}\n    /></ChartContainer>}\n    <ItemList\n      style={{\n        height: `${extraSpace + (barHeight * (yomiItems.length + 1))}px`,\n      }}\n    >\n      <ItemListHeader\n        barHeight={barHeight}\n        style={{\n          transform: `translateY(${extraSpace}px)`,\n          transitionDelay: `${hexItems.length > 0\n            ? yomiItems.length * 0.01\n            : 0\n          }s`,\n        }}\n      >\n        {sortCol ? `${sortCol} (${words[sortCol]})` : 'Total'}\n      </ItemListHeader>\n      {yomiItems.map((yomi) => {\n        const val = sortCol ? yomi.points[sortCol] : yomi.total;\n        const width = sortCol ? val / 200 : yomi.total / 1000;\n        const index = order.indexOf(yomi.name);\n        const isSelected = hexItems.indexOf(yomi.name) !== -1;\n        const animOffset = (false && isSelected)\n          ? hexItems.indexOf(yomi.name) * 0.01\n          : hexItems.length > 0\n            ? (yomiItems.length - index) * 0.01\n            :  index * 0.01;\n        return <Row\n          barHeight={barHeight}\n          key={yomi.name}\n          style={{\n            transform: `translateY(${extraSpace + (index + 1) * barHeight}px)`,\n            transitionDelay: `${animOffset}s`,\n          }}\n          onClick={() => {\n            toggleHex(yomi.name);\n          }}\n        >\n          <RowBar\n            style={{\n              transform: `scaleX(${init ? width : 0})`,\n              background: isSelected ? '#bbb' : '',\n            }}\n          />\n          <RowContent>\n            <RowIcon\n              style={yomi.img ? {\n                backgroundImage: `url(${imgPath}${yomi.img})`,\n              } : {}}\n            />\n            <RowName>\n              {index + 1}. {yomi.name}\n            </RowName>\n            <RowScore>\n              {val}\n            </RowScore>\n          </RowContent>\n        </Row>;\n      })}\n    </ItemList>\n    <Footer></Footer>\n  </Container>;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}